/**
 * trieve-server
 * Trieve REST API OpenAPI Documentation
 *
 * OpenAPI spec version: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class InvitationData {
    /**
    * The url of the app that the user will be directed to in order to set their password. Usually admin.trieve.ai, but may differ for local dev or self-hosted setups.
    */
    'appUrl': string;
    /**
    * The email of the user to invite. Must be a valid email as they will be sent an email to register.
    */
    'email': string;
    /**
    * The id of the organization to invite the user to.
    */
    'organizationId': string;
    /**
    * The url that the user will be redirected to after setting their password.
    */
    'redirectUri': string;
    /**
    * The role the user will have in the organization. 0 = User, 1 = Admin, 2 = Owner.
    */
    'userRole': number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "appUrl",
            "baseName": "app_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "organizationId",
            "baseName": "organization_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "redirectUri",
            "baseName": "redirect_uri",
            "type": "string",
            "format": ""
        },
        {
            "name": "userRole",
            "baseName": "user_role",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return InvitationData.attributeTypeMap;
    }

    public constructor() {
    }
}

